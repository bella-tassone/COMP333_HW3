{"ast":null,"code":"var _jsxFileName = \"/Users/bella.tassone/GitHub_Repos/COMP333 REPOS/COMP333_HW3/Frontend/comp333-hw3/src/views/Login.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = props => {\n  _s();\n  const [username, setUsername] = useState(0);\n  const [password, setPassword] = useState(0);\n\n  // the useEffect function replaces componentDidMount,\n  // componentDidUpdate and componentWillUnmount\n  useEffect(() => {\n    var timerID = setInterval(() => tick(), 1000);\n\n    // if we return a function in the effect, it only\n    // happens when the component is unmounting.\n    return () => clearInterval(timerID);\n  });\n  function tick() {\n    setDate(new Date());\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hello, world!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"It is \", date.toLocaleTimeString(), \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"OvX17DRq9H2MbQP3gUjEgHlYCpk=\");\n_c = Login;\nReactDOM.render( /*#__PURE__*/_jsxDEV(Clock, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 29,\n  columnNumber: 17\n}, this), document.getElementById(\"root\"));\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","Login","props","_s","username","setUsername","password","setPassword","timerID","setInterval","tick","clearInterval","setDate","Date","children","fileName","_jsxFileName","lineNumber","columnNumber","date","toLocaleTimeString","_c","ReactDOM","render","Clock","document","getElementById","$RefreshReg$"],"sources":["/Users/bella.tassone/GitHub_Repos/COMP333 REPOS/COMP333_HW3/Frontend/comp333-hw3/src/views/Login.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst Login = (props) => {\n    const [username, setUsername] = useState(0);\n    const [password, setPassword] = useState(0);\n\n  // the useEffect function replaces componentDidMount,\n  // componentDidUpdate and componentWillUnmount\n  useEffect(() => {\n    var timerID = setInterval(() => tick(), 1000);\n\n    // if we return a function in the effect, it only\n    // happens when the component is unmounting.\n    return () => clearInterval(timerID);\n  });\n\n  function tick() {\n    setDate(new Date());\n  }\n\n  return (\n    <div>\n      <h1>Hello, world!</h1>\n      <h2>It is {date.toLocaleTimeString()}.</h2>\n    </div>\n  );\n};\n\nReactDOM.render(<Clock />, document.getElementById(\"root\"));"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,KAAK,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACrB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;;EAE7C;EACA;EACAC,SAAS,CAAC,MAAM;IACd,IAAIU,OAAO,GAAGC,WAAW,CAAC,MAAMC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC;;IAE7C;IACA;IACA,OAAO,MAAMC,aAAa,CAACH,OAAO,CAAC;EACrC,CAAC,CAAC;EAEF,SAASE,IAAIA,CAAA,EAAG;IACdE,OAAO,CAAC,IAAIC,IAAI,CAAC,CAAC,CAAC;EACrB;EAEA,oBACEb,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAAc,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBlB,OAAA;MAAAc,QAAA,GAAI,QAAM,EAACK,IAAI,CAACC,kBAAkB,CAAC,CAAC,EAAC,GAAC;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEV,CAAC;AAACf,EAAA,CAxBIF,KAAK;AAAAoB,EAAA,GAALpB,KAAK;AA0BXqB,QAAQ,CAACC,MAAM,eAACvB,OAAA,CAACwB,KAAK;EAAAT,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAE,CAAC,EAAEO,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AAAC,IAAAL,EAAA;AAAAM,YAAA,CAAAN,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}